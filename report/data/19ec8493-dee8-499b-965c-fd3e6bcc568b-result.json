{"name": "调试函数sum_data(),从path需要运算", "status": "failed", "statusDetails": {"message": "AssertionError: 第1个断言失败 -|- 实际结果:{'msg': '更新失败', 'status': 400} || 预期结果: {'msg': '设置状态成功', 'status': 200}", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '更新失败', 'status': 400}}\nexpect_str = '{\"$.meta\":{\"msg\": \"设置状态成功\", \"status\": 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(\n                f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言', f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:119: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_019', '调试函数sum_data(),从path需要运算', 'users/@sum_data(&$.case_005.data.id&, 2)@/', '读', 'put', 'data', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '更新失败', 'status': 400}}\nexpect_str = '{\"$.meta\":{\"msg\": \"设置状态成功\", \"status\": 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(\n                f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言', f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(\n                    f'第{index}个断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 第1个断言失败 -|- 实际结果:{'msg': '更新失败', 'status': 400} || 预期结果: {'msg': '设置状态成功', 'status': 200}\n\ntools\\data_process.py:121: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "66dba5dd-e8bf-48ab-97bb-0ffd2918a628-attachment.txt", "type": "text/plain"}], "start": 1619797414530, "stop": 1619797414530}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "3d5d5e9a-e6b4-4fc0-97e5-34f0eb1e2f80-attachment.txt", "type": "text/plain"}], "start": 1619797414531, "stop": 1619797414531}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "cb32db6d-337d-4876-b51c-1005083fb1d8-attachment.txt", "type": "text/plain"}], "start": 1619797414531, "stop": 1619797414532}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "50ed1e85-7f30-4c70-83c9-8aa1b3d2597b-attachment.txt", "type": "text/plain"}], "start": 1619797414532, "stop": 1619797414533}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "af02cf31-1bad-41e2-b519-c503eeb4fd3e-attachment.txt", "type": "text/plain"}], "start": 1619797414576, "stop": 1619797414576}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "f71b12da-9258-4e19-a194-13e6a3cad783-attachment.txt", "type": "text/plain"}], "start": 1619797414576, "stop": 1619797414577}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "02aacae4-9bb7-449f-9826-3372e1dded95-attachment.txt", "type": "text/plain"}], "start": 1619797414577, "stop": 1619797414578}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "d536d20a-73ad-4245-9b3e-4b1598f82ff4-attachment.txt", "type": "text/plain"}], "start": 1619797414579, "stop": 1619797414579}], "attachments": [{"name": "stderr", "source": "9d728a5f-a590-450e-ac71-5ac92672037e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['case_019', '调试函数sum_data(),从path需要运算', 'users/@sum_data(&$.case_005.data.id&, 2)@/', '读', 'put', 'data', '', '{\"username\": \"tery\",\"password\": @sum_data(&$.case_002.data.id&, 66)@, \"timer\":  @get_current_highest()@, \"timer_str\": \" @get_current_highest()@\"}', '', '{\"$.meta\":{\"msg\": \"设置状态成功\", \"status\": 200}}', '是']"}], "start": 1619797414529, "stop": 1619797414580, "uuid": "f2cf3208-ade4-4e21-89e1-10a2a09d6bea", "historyId": "0d3dd93f9d173bd3e59f983349bd1202", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LYL"}, {"name": "thread", "value": "11380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}