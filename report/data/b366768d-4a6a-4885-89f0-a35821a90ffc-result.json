{"name": "sql断言的用例（在本地数据库调试）", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:500 || 预期结果: None", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': {'email': '1296522554@qq.com', 'id': 500, 'mobile': '17674949994', 'rid': 0, ...}, 'meta': {'msg': '登录成功', 'status': 200}}\nexpect_str = '{\"$.data.id\":None}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_012', 'sql断言的用例（在本地数据库调试）', 'login', '', 'get', 'params', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': {'email': '1296522554@qq.com', 'id': 500, 'mobile': '17674949994', 'rid': 0, ...}, 'meta': {'msg': '登录成功', 'status': 200}}\nexpect_str = '{\"$.data.id\":None}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:500 || 预期结果: None\n\ntools\\data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "6a22730f-fb3a-4dfa-a174-193b09d1b6e8-attachment.txt", "type": "text/plain"}], "start": 1619624938792, "stop": 1619624938792}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "5dacc69a-f5f2-4a39-86f5-5f0ff6b1f5d7-attachment.txt", "type": "text/plain"}], "start": 1619624938792, "stop": 1619624938808}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "5ca94316-a093-4f5e-ac4f-c3a3bcd7a872-attachment.txt", "type": "text/plain"}], "start": 1619624938808, "stop": 1619624938808}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "ca28c665-dd24-4848-acf7-02e211b7f3cb-attachment.txt", "type": "text/plain"}], "start": 1619624938808, "stop": 1619624938808}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "ee0432e7-b0bf-4201-8ef1-235e0f70a2d8-attachment.txt", "type": "text/plain"}], "start": 1619624938964, "stop": 1619624938964}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "af3fe1ed-aae4-4111-92d5-c30148549775-attachment.txt", "type": "text/plain"}], "start": 1619624938964, "stop": 1619624938964}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "373d7fbf-271f-4ba8-8cf2-932f48a9f2e8-attachment.txt", "type": "text/plain"}], "start": 1619624938964, "stop": 1619624938964}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "99010056-0c09-42bc-9b53-ef4b90d1ed46-attachment.txt", "type": "text/plain"}], "start": 1619624938964, "stop": 1619624938964}], "attachments": [{"name": "stderr", "source": "87aff6d7-6bde-441c-b71e-d5f16ccc77f7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['case_012', 'sql断言的用例（在本地数据库调试）', 'login', '', 'get', 'params', '', '{\"username\": \"admin\", \"password\": \"123456\"}', 'select `id` from user;', '{\"$.data.id\":&$.id&}']"}], "start": 1619624938792, "stop": 1619624938964, "uuid": "1dabd802-1e4c-442b-bfeb-32bfd7663628", "historyId": "5a1a59aa4470006c7c58a5ba625a4478", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LYL"}, {"name": "thread", "value": "12004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}