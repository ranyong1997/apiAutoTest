{"name": "调试运算新功能,从path需要运算", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:{'msg': '更新失败', 'status': 400} || 预期结果: {'msg': '设置状态成功', 'status': 200}", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '更新失败', 'status': 400}}\nexpect_str = '{\"$.meta\":{\"msg\": \"设置状态成功\", \"status\": 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_019', '调试运算新功能,从path需要运算', 'users/eval`&$.case_005.data.id&*2`/', '读', 'put', 'data', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '更新失败', 'status': 400}}\nexpect_str = '{\"$.meta\":{\"msg\": \"设置状态成功\", \"status\": 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:{'msg': '更新失败', 'status': 400} || 预期结果: {'msg': '设置状态成功', 'status': 200}\n\ntools\\data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "16e6650a-aad3-44de-9df3-1729a5265f01-attachment.txt", "type": "text/plain"}], "start": 1619624939529, "stop": 1619624939530}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "54e495f2-7eea-47ea-a109-188b25cf1094-attachment.txt", "type": "text/plain"}], "start": 1619624939530, "stop": 1619624939531}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "476021a1-c083-4649-ac6d-fb8dabd062e0-attachment.txt", "type": "text/plain"}], "start": 1619624939531, "stop": 1619624939532}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "283e612c-a980-4edb-878a-ad8dba7e4934-attachment.txt", "type": "text/plain"}], "start": 1619624939532, "stop": 1619624939532}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "ab6ef3be-ec2a-4211-89eb-171e004eb8be-attachment.txt", "type": "text/plain"}], "start": 1619624939575, "stop": 1619624939576}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "543ca3a2-d532-436d-8105-1e0f685459e6-attachment.txt", "type": "text/plain"}], "start": 1619624939576, "stop": 1619624939577}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "8ce6373e-945d-4ff9-9f31-8169efce66ee-attachment.txt", "type": "text/plain"}], "start": 1619624939577, "stop": 1619624939578}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "f931b983-90a4-41b6-a6e5-44da2a1f6b7e-attachment.txt", "type": "text/plain"}], "start": 1619624939579, "stop": 1619624939579}], "attachments": [{"name": "stderr", "source": "8d52b119-6dd8-48fc-b809-f335e67e152c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['case_019', '调试运算新功能,从path需要运算', 'users/eval`&$.case_005.data.id&*2`/', '读', 'put', 'data', '', '', '', '{\"$.meta\":{\"msg\": \"设置状态成功\", \"status\": 200}}']"}], "start": 1619624939529, "stop": 1619624939580, "uuid": "b80f3b79-20ce-4c16-8b4e-6fb1cb01fa47", "historyId": "b0878ee5eb70538305b060fabbf99fe0", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LYL"}, {"name": "thread", "value": "12004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}