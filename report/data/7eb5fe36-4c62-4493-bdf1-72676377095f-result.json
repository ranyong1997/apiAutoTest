{"name": "get请求实现登录", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:None || 预期结果: 400", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '参数错误', 'status': 400}}\nexpect_str = '{\"$.meta.code\":400}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_001', 'get请求实现登录', 'login', '', 'get', 'params', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '参数错误', 'status': 400}}\nexpect_str = '{\"$.meta.code\":400}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:None || 预期结果: 400\n\ntools\\data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "1975b714-abdf-4f7f-af34-f41a8be920e1-attachment.txt", "type": "text/plain"}], "start": 1619624937671, "stop": 1619624937671}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "27104a46-d698-4621-9ba4-5a932def4811-attachment.txt", "type": "text/plain"}], "start": 1619624937672, "stop": 1619624937672}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "2264feac-e335-4ba0-8e85-c4a902af4912-attachment.txt", "type": "text/plain"}], "start": 1619624937672, "stop": 1619624937680}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "d6d723e3-eb47-4a5b-948e-24073897d3a0-attachment.txt", "type": "text/plain"}], "start": 1619624937680, "stop": 1619624937681}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "1625cafe-ceae-4ed3-ba6a-780930154e00-attachment.txt", "type": "text/plain"}], "start": 1619624937773, "stop": 1619624937774}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "b8d205e4-eb58-431e-91f7-6ea0423a7093-attachment.txt", "type": "text/plain"}], "start": 1619624937774, "stop": 1619624937775}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "40977afd-619d-471f-9eb6-0f4139696965-attachment.txt", "type": "text/plain"}], "start": 1619624937782, "stop": 1619624937783}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "c7c49b88-3bee-4181-91c1-73fd5696b643-attachment.txt", "type": "text/plain"}], "start": 1619624937784, "stop": 1619624937785}], "attachments": [{"name": "stderr", "source": "3ee7876d-42a9-4917-a2ea-50a9c35529b6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['case_001', 'get请求实现登录', 'login', '', 'get', 'params', '', '{\"username\": \"admin\", \"password\": \"\"}', '', '{\"$.meta.code\":400}']"}], "start": 1619624937670, "stop": 1619624937785, "uuid": "2e7304ee-f6ef-42e4-8087-1893022f26dd", "historyId": "8174f8ecb1004db16679a852ff5f760a", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LYL"}, {"name": "thread", "value": "12004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}