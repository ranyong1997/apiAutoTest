{"name": "get请求查询用户数据列表", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:{'msg': '无效token', 'status': 400} || 预期结果: {'msg': '获取管理员列表成功', 'status': 200}", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '无效token', 'status': 400}}\nexpect_str = '{\"$.meta\":{\"msg\": \"获取管理员列表成功\", \"status\": 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_004', 'get请求查询用户数据列表', 'users', '', 'get', 'data', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '无效token', 'status': 400}}\nexpect_str = '{\"$.meta\":{\"msg\": \"获取管理员列表成功\", \"status\": 200}}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:{'msg': '无效token', 'status': 400} || 预期结果: {'msg': '获取管理员列表成功', 'status': 200}\n\ntools\\data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "ce0fa8d1-444e-4aef-94f3-d5404dbde495-attachment.txt", "type": "text/plain"}], "start": 1619624938303, "stop": 1619624938304}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "e6b0c8d0-7a12-49fb-947e-6c56f3a98214-attachment.txt", "type": "text/plain"}], "start": 1619624938304, "stop": 1619624938305}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "8bceb9a9-16d4-4694-83f1-5fc428bf0914-attachment.txt", "type": "text/plain"}], "start": 1619624938306, "stop": 1619624938307}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "422996d3-8f5a-4e9a-baba-a4649313b7a7-attachment.txt", "type": "text/plain"}], "start": 1619624938307, "stop": 1619624938307}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "ff55f44c-e661-4ac1-b2a8-b43052ef51f6-attachment.txt", "type": "text/plain"}], "start": 1619624938349, "stop": 1619624938350}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "0afdffb3-3def-4c60-9252-b37a14f1fd26-attachment.txt", "type": "text/plain"}], "start": 1619624938350, "stop": 1619624938351}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "c468fe4b-8a3b-4c93-b494-b5fa97dce0ff-attachment.txt", "type": "text/plain"}], "start": 1619624938351, "stop": 1619624938352}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "3e9a2a6a-b27a-4dd8-9fa1-0be21612faae-attachment.txt", "type": "text/plain"}], "start": 1619624938353, "stop": 1619624938354}], "attachments": [{"name": "stderr", "source": "1790ab63-98eb-4403-89a0-81bfc55b7056-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['case_004', 'get请求查询用户数据列表', 'users', '', 'get', 'data', '', '{\"pagenum\": 1, \"pagesize\": \"12\", \"msg\": &$.msg&}', '', '{\"$.meta\":{\"msg\": \"获取管理员列表成功\", \"status\": 200}}']"}], "start": 1619624938303, "stop": 1619624938354, "uuid": "d001e0b9-f619-4d60-80ef-8b7e50a61d76", "historyId": "f9a3a528aa08d345b131e068670a2332", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LYL"}, {"name": "thread", "value": "12004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}