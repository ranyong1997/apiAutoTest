{"name": "调试运算新功能,从响应提取后运算", "status": "failed", "statusDetails": {"message": "AssertionError: 第1个断言失败 -|- 实际结果:用户名已存在 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '用户名已存在', 'status': 400}}\nexpect_str = '{\"$.meta.msg\": \"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(\n                f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言', f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:119: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_018', '调试运算新功能,从响应提取后运算', 'users/', '读', 'post', 'data', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '用户名已存在', 'status': 400}}\nexpect_str = '{\"$.meta.msg\": \"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(\n                f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言', f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(\n                    f'第{index}个断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 第1个断言失败 -|- 实际结果:用户名已存在 || 预期结果: 成功\n\ntools\\data_process.py:121: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "2ddb4b36-c8db-48dc-b537-54c7bd0b91a7-attachment.txt", "type": "text/plain"}], "start": 1619797414459, "stop": 1619797414460}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "a5218c0a-0966-4d5d-810e-f63c3e7eaf6a-attachment.txt", "type": "text/plain"}], "start": 1619797414460, "stop": 1619797414461}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "26f23daa-76f8-43b4-85ce-66595a5b4cb8-attachment.txt", "type": "text/plain"}], "start": 1619797414461, "stop": 1619797414462}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "0a12f3af-6b0f-467b-90ee-8f6422ec03ec-attachment.txt", "type": "text/plain"}], "start": 1619797414462, "stop": 1619797414462}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "30fc38a4-b6b9-4669-a378-4bced18b5542-attachment.txt", "type": "text/plain"}], "start": 1619797414505, "stop": 1619797414512}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "a071ab76-2066-4e07-b9ec-caaeb6fc213c-attachment.txt", "type": "text/plain"}], "start": 1619797414513, "stop": 1619797414513}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "07efe0e5-f443-4b75-9976-9498dd558046-attachment.txt", "type": "text/plain"}], "start": 1619797414514, "stop": 1619797414515}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "fb126b6a-eda3-45ab-8ea5-637bc1ab76e9-attachment.txt", "type": "text/plain"}], "start": 1619797414515, "stop": 1619797414516}], "attachments": [{"name": "stderr", "source": "ecbf9706-6022-42e5-a68a-013de1c3a079-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['case_018', '调试运算新功能,从响应提取后运算', 'users/', '读', 'post', 'data', '', '{\"username\": \"tery\",\"password\": @get_current_highest()@}', '', '{\"$.meta.msg\": \"成功\"}', '是']"}], "start": 1619797414459, "stop": 1619797414516, "uuid": "04ae2070-b7a1-44ec-8a7a-c42bfc0b86fc", "historyId": "25f6ba9e78828713a480fcdbed4cfa82", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LYL"}, {"name": "thread", "value": "11380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}