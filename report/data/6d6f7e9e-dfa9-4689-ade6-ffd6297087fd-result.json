{"name": "调试运算新功能,从响应提取后运算", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:None || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '用户名已存在', 'status': 400}}\nexpect_str = '{\"$.msg\": \"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools\\data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_018', '调试运算新功能,从响应提取后运算', 'users/', '读', 'post', 'data', ...]\n\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'data': None, 'meta': {'msg': '用户名已存在', 'status': 400}}\nexpect_str = '{\"$.msg\": \"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:None || 预期结果: 成功\n\ntools\\data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "ddf0ebad-b5b1-4efc-99a1-3367f1ec6ba9-attachment.txt", "type": "text/plain"}], "start": 1619624939456, "stop": 1619624939457}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "00dc2d67-8b20-4d94-9956-a0da8fc181fc-attachment.txt", "type": "text/plain"}], "start": 1619624939457, "stop": 1619624939458}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "cddfee18-7124-4259-9aa0-35417e0f0932-attachment.txt", "type": "text/plain"}], "start": 1619624939458, "stop": 1619624939459}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "f4eef5c0-8153-40d8-b27d-994c6a850704-attachment.txt", "type": "text/plain"}], "start": 1619624939459, "stop": 1619624939459}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "6ab9b8fc-16a3-4c0c-aabc-ea09e6841a85-attachment.txt", "type": "text/plain"}], "start": 1619624939505, "stop": 1619624939506}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "fe83fc41-876e-449e-95bd-444eaa5dd45e-attachment.txt", "type": "text/plain"}], "start": 1619624939506, "stop": 1619624939507}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "fd569f5f-4d5e-40fa-847e-530a14707455-attachment.txt", "type": "text/plain"}], "start": 1619624939507, "stop": 1619624939508}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "682073ff-b647-4de6-93f1-4a8b169e4247-attachment.txt", "type": "text/plain"}], "start": 1619624939509, "stop": 1619624939518}], "attachments": [{"name": "stderr", "source": "35eb13db-e76e-49d1-a5bf-0ae26630a1e6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['case_018', '调试运算新功能,从响应提取后运算', 'users/', '读', 'post', 'data', '', '{\"username\": \"tery\",\"password\": eval`&$.case_002.data.id&+500`}', '', '{\"$.msg\": \"成功\"}']"}], "start": 1619624939456, "stop": 1619624939518, "uuid": "4cf4fb0d-47a7-4819-a5c5-59433adcf941", "historyId": "b38dd9102eca0ecc435403cc70874ea0", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "LYL"}, {"name": "thread", "value": "12004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}